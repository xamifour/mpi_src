# Generated by Django 5.1 on 2024-09-14 20:30

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=67, unique=True, verbose_name="name"),
                ),
                (
                    "name_for_users",
                    models.CharField(
                        blank=True,
                        help_text="Friendly name for user, eg Plan-100MB",
                        max_length=67,
                        null=True,
                        verbose_name="name for users",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="price"
                    ),
                ),
                (
                    "starts_when",
                    models.CharField(
                        default="assigned", max_length=67, verbose_name="starts when"
                    ),
                ),
                (
                    "validity",
                    models.CharField(
                        default="30d 00:00:00", max_length=67, verbose_name="validity"
                    ),
                ),
                (
                    "override_shared_users",
                    models.CharField(
                        default="off",
                        max_length=67,
                        verbose_name="override shared users",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "group",
                    models.CharField(
                        blank=True, max_length=67, null=True, verbose_name="group"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        max_length=67,
                        null=True,
                        unique=True,
                        verbose_name="name",
                    ),
                ),
                (
                    "disabled",
                    models.BooleanField(default=False, verbose_name="disabled"),
                ),
                (
                    "otp_secret",
                    models.CharField(
                        blank=True, max_length=256, null=True, verbose_name="otp-secret"
                    ),
                ),
                (
                    "shared_users",
                    models.PositiveIntegerField(default=1, verbose_name="shared-users"),
                ),
                (
                    "attributes",
                    models.CharField(
                        blank=True, max_length=67, null=True, verbose_name="attributes"
                    ),
                ),
                (
                    "plain_password",
                    models.CharField(
                        blank=True,
                        max_length=67,
                        null=True,
                        verbose_name="plain password",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        help_text="0201234567",
                        max_length=10,
                        null=True,
                        verbose_name="phone",
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, max_length=256, null=True, verbose_name="address"
                    ),
                ),
                (
                    "notes",
                    models.CharField(
                        blank=True, max_length=1024, null=True, verbose_name="notes"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Session",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "session_id",
                    models.CharField(
                        max_length=67, unique=True, verbose_name="Session ID"
                    ),
                ),
                (
                    "nas_ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="NAS IP Address"
                    ),
                ),
                (
                    "nas_port_id",
                    models.CharField(max_length=67, verbose_name="NAS Port ID"),
                ),
                (
                    "nas_port_type",
                    models.CharField(max_length=67, verbose_name="NAS Port Type"),
                ),
                (
                    "calling_station_id",
                    models.CharField(max_length=67, verbose_name="Calling Station ID"),
                ),
                ("download", models.BigIntegerField(verbose_name="Download")),
                ("upload", models.BigIntegerField(verbose_name="Upload")),
                ("uptime", models.CharField(max_length=67, verbose_name="Uptime")),
                ("status", models.CharField(max_length=67, verbose_name="Status")),
                ("started", models.DateTimeField(verbose_name="Started")),
                (
                    "ended",
                    models.DateTimeField(blank=True, null=True, verbose_name="Ended"),
                ),
                (
                    "last_accounting_packet",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Last Accounting Packet"
                    ),
                ),
                (
                    "terminate_cause",
                    models.CharField(
                        blank=True,
                        max_length=67,
                        null=True,
                        verbose_name="Terminate Cause",
                    ),
                ),
                (
                    "user_address",
                    models.GenericIPAddressField(verbose_name="User Address"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True, max_length=67, null=True, verbose_name="state"
                    ),
                ),
                (
                    "end_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="end time"
                    ),
                ),
                ("mikrotik_id", models.CharField(max_length=20, unique=True)),
                (
                    "profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usermanager.profile",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "profile", "state", "end_time")},
            },
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "copy_from",
                    models.CharField(
                        choices=[("manual", "Manual"), ("auto", "Auto")], max_length=67
                    ),
                ),
                (
                    "method",
                    models.CharField(
                        choices=[("ONLINE", "Online"), ("OFFLINE", "Offline")],
                        default="OFFLINE",
                        max_length=67,
                    ),
                ),
                ("trans_start", models.DateTimeField()),
                ("trans_end", models.DateTimeField(blank=True, null=True)),
                (
                    "trans_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        max_length=67,
                    ),
                ),
                ("user_message", models.TextField(blank=True, null=True)),
                ("currency", models.CharField(default="GHS", max_length=67)),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "paystack_reference",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "profile",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="usermanager.profile",
                    ),
                ),
                (
                    "user_profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="usermanager.userprofile",
                    ),
                ),
            ],
        ),
    ]
